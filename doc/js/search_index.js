var search_data = {"index":{"searchIndex":["edge","face","object","vec3f","*()","+()","-()","==()","==()","==()","[]()","^()","area()","contain()","contours()","direction()","dist()","facial()","incident()","init()","init_gl()","init_linear_nodal()","init_vrt()","intersect()","intersection()","inverse()","left()","length()","new()","new()","new()","norm()","normalize()","overlay()","project()","right()","set()","set()","union()","write_projection()"],"longSearchIndex":["edge","face","object","vec3f","vec3f#*()","vec3f#+()","vec3f#-()","edge#==()","face#==()","vec3f#==()","face#[]()","vec3f#^()","object#area()","edge#contain()","object#contours()","object#direction()","vec3f#dist()","face#facial()","edge#incident()","object#init()","object#init_gl()","object#init_linear_nodal()","object#init_vrt()","edge#intersect()","object#intersection()","edge#inverse()","edge#left()","vec3f#length()","edge::new()","face::new()","vec3f::new()","face#norm()","vec3f#normalize()","object#overlay()","object#project()","edge#right()","edge#set()","face#set()","object#union()","object#write_projection()"],"info":[["Edge","","Edge.html","","<p>Реберный список с вдвумя связами\n"],["Face","","Face.html","",""],["Object","","Object.html","",""],["Vec3f","","Vec3f.html","",""],["*","Vec3f","Vec3f.html#method-i-2A","(f)",""],["+","Vec3f","Vec3f.html#method-i-2B","(f)",""],["-","Vec3f","Vec3f.html#method-i-2D","(f)",""],["==","Edge","Edge.html#method-i-3D-3D","(ed)",""],["==","Face","Face.html#method-i-3D-3D","(f)",""],["==","Vec3f","Vec3f.html#method-i-3D-3D","(f)",""],["[]","Face","Face.html#method-i-5B-5D","(i)",""],["^","Vec3f","Vec3f.html#method-i-5E","(f)","<p>Векторное произведение\n"],["area","Object","Object.html#method-i-area","(pr, vrt, n, p)","<p>площадь полигона найдём используя векторное произведение p - точка лежащая\nв плоскости проектирования …\n"],["contain","Edge","Edge.html#method-i-contain","(vr, v)",""],["contours","Object","Object.html#method-i-contours","(e, faces, lt)",""],["direction","Object","Object.html#method-i-direction","(v, e, eds, dir)",""],["dist","Vec3f","Vec3f.html#method-i-dist","(f)",""],["facial","Face","Face.html#method-i-facial","(v)",""],["incident","Edge","Edge.html#method-i-incident","(ed)",""],["init","Object","Object.html#method-i-init","(p, l, ind)",""],["init_gl","Object","Object.html#method-i-init_gl","()",""],["init_linear_nodal","Object","Object.html#method-i-init_linear_nodal","(pr)",""],["init_vrt","Object","Object.html#method-i-init_vrt","(v, e)",""],["intersect","Edge","Edge.html#method-i-intersect","(ed, v)",""],["intersection","Object","Object.html#method-i-intersection","(v, e, cr_range)",""],["inverse","Edge","Edge.html#method-i-inverse","()",""],["left","Edge","Edge.html#method-i-left","(ed, v)",""],["length","Vec3f","Vec3f.html#method-i-length","()",""],["new","Edge","Edge.html#method-c-new","(op={})",""],["new","Face","Face.html#method-c-new","(op={})",""],["new","Vec3f","Vec3f.html#method-c-new","(x = 0.0, y = 0.0, z = 0.0)",""],["norm","Face","Face.html#method-i-norm","(vrt)",""],["normalize","Vec3f","Vec3f.html#method-i-normalize","()",""],["overlay","Object","Object.html#method-i-overlay","(v, e, cr_range, p_border, dir)",""],["project","Object","Object.html#method-i-project","(v, e, cntrs, n, p, lt)","<p>плоскость в которую будем проектировать задаем  через нормаль и точку\nлежащей на ней n = (A,B,C) r=r0+a*t …\n"],["right","Edge","Edge.html#method-i-right","(ed, v)",""],["set","Edge","Edge.html#method-i-set","(op={})",""],["set","Face","Face.html#method-i-set","(op)",""],["union","Object","Object.html#method-i-union","(v, e, cr_range, p_border)",""],["write_projection","Object","Object.html#method-i-write_projection","(pr)",""]]}}